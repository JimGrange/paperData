setwd("~/Git/paperData/2015/Episodic Retrieval & Inhibition/Data & Analysis Code")
# clear workspace
rm(list = ls())
# set working directory
setwd("~/Git/paperData/2015/Episodic Retrieval & Inhibition/Data & Analysis Code")
# load necessary functions file & load necessary packages
source("functions.R")
library(dplyr)
library(ggplot2)
library(ez)
library(BayesFactor)
library(BEST)
# load the data file
fullData <- read.csv("allData.csv", header = TRUE)
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### Error Data Trimming
# Remove null trials (1st and 2nd trial of each block)
# which trials were null?
nullTrials <- c(1, 2, 121, 122, 241, 242, 361, 362)
# remove these trials
data <- fullData[! fullData$trial %in% nullTrials, ]
# add column to code for removing two trials following an error, initialised
# to zero
data <- mutate(data, accTrim = 0)
# populate this column
for(i in 3:nrow(data)){
data$accTrim[i] <- data$accuracy[i - 2] * data$accuracy[i - 1]
}
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### Error Analysis
# First, we need to see the OVERALL accuracy per participant, as we will want
# to remove people who do not meet a certain criteria
accuracy <- data %>%
group_by(subject) %>%
summarise(meanAccuracy = (sum(accuracy) / length(accuracy) * 100))
# which subjects fall below our criterion of 90% accuracy?
errorRemove <- accuracy[accuracy$meanAccuracy <= 90, ]$subject
# remove these subjects from the data file
data <- data[! data$subject %in% errorRemove, ]
# remove the 2 trials following an error
data <- subset(data, data$accTrim == 1)
# now produce a data frame with accuracy analysis per condition
accuracy <- data %>%
group_by(subject, stimRep, sequence) %>%
summarise(acc = (sum(accuracy) / length(accuracy)))
# now remove all error trials, so we are ready for RT analysis
data <- subset(data, data$accuracy == 1)
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### response time analysis
# trim the RTs with fixed standard deviation upper limit
rtData <- getRTs(data = data, minRT = 150, sd = 2.5)
#---------
# calculate the mean BI for each condition
biRT <- rtData %>%
group_by(subject) %>%
summarise(rep = abaRep - cbaRep, sw = abaSw - cbaSw)
# get the difference score
biDiff <- biRT$rep - biRT$sw
#---------
# Bayes Factor Analysis
# what is the Bayes Factor of the difference in BI between stimRep & stimSw?
bfDiff <- ttestBF(x = biDiff, rscale = 0.707)
bfDiff
biDiff
# get the difference score
biDiff <- mean(c(biRT$rep, biRT$sw))
#---------
# Bayes Factor Analysis
# what is the Bayes Factor of the difference in BI between stimRep & stimSw?
bfDiff <- ttestBF(x = biDiff, rscale = 0.707)
# plot the progression of the Bayes Factor of the interaction as more
# subjects are added
bfProg <- plotBF(biDiff, scale = 0.707)
bfProg[, 2] <- log(bfProg[, 2])
bfProg[1, 2] <- 0
pdf("bayesFactor.pdf", width = 8, height = 5)
plot(bfProg[, 1], bfProg[, 2], type = "b", xlab = "Sample Size",
ylab = "(Log) Bayes Factor (10)", ylim = c(-2.5, 2.5), pch = 19,
col = "gray48", lwd = 2)
abline(h = 0, lwd = 1)
abline(h = log(6), col = "black", lty = 2, lwd = 2)
abline(h = log(1/6), col = "black", lty = 2, lwd = 2)
text(0, log(3) + 0.4, labels = "Evidence for Alternative",
cex = 1.5, col = "black", pos = 4)
text(0, log(1/3) - 0.4, labels = "Evidence for Null",
cex = 1.5, col = "black", pos = 4)
dev.off()
setwd("~/Git/paperData/2015/Episodic Retrieval & Inhibition/Data & Analysis Code")
# clear workspace
rm(list = ls())
# set working directory
setwd("~/Git/paperData/2015/Episodic Retrieval & Inhibition/Data & Analysis Code")
# load necessary functions file & load necessary packages
source("functions.R")
library(dplyr)
library(ggplot2)
library(ez)
library(BayesFactor)
library(BEST)
# load the data file
fullData <- read.csv("allData.csv", header = TRUE)
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### Error Data Trimming
# Remove null trials (1st and 2nd trial of each block)
# which trials were null?
nullTrials <- c(1, 2, 121, 122, 241, 242, 361, 362)
# remove these trials
data <- fullData[! fullData$trial %in% nullTrials, ]
# add column to code for removing two trials following an error, initialised
# to zero
data <- mutate(data, accTrim = 0)
# populate this column
for(i in 3:nrow(data)){
data$accTrim[i] <- data$accuracy[i - 2] * data$accuracy[i - 1]
}
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### Error Analysis
# First, we need to see the OVERALL accuracy per participant, as we will want
# to remove people who do not meet a certain criteria
accuracy <- data %>%
group_by(subject) %>%
summarise(meanAccuracy = (sum(accuracy) / length(accuracy) * 100))
# which subjects fall below our criterion of 90% accuracy?
errorRemove <- accuracy[accuracy$meanAccuracy <= 90, ]$subject
# remove these subjects from the data file
data <- data[! data$subject %in% errorRemove, ]
# remove the 2 trials following an error
data <- subset(data, data$accTrim == 1)
# now produce a data frame with accuracy analysis per condition
accuracy <- data %>%
group_by(subject, stimRep, sequence) %>%
summarise(acc = (sum(accuracy) / length(accuracy)))
# now remove all error trials, so we are ready for RT analysis
data <- subset(data, data$accuracy == 1)
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### response time analysis
# trim the RTs with fixed standard deviation upper limit
rtData <- getRTs(data = data, minRT = 150, sd = 2.5)
#---------
# calculate the mean BI for each condition
biRT <- rtData %>%
group_by(subject) %>%
summarise(rep = abaRep - cbaRep, sw = abaSw - cbaSw)
# get the difference score
biDiff <- mean(c(biRT$rep, biRT$sw))
#---------
# Bayes Factor Analysis
# what is the Bayes Factor of the difference in BI between stimRep & stimSw?
bfDiff <- ttestBF(x = biDiff, rscale = 0.707)
biDiff
biDiff <- biRT$rep
biDiff
bfDiff <- ttestBF(x = biDiff, rscale = 0.707)
bfDiff
biDiff <- biRT$sw
ttestBF(x = biDiff, rscale = 0.707)
(biRT$sw + biRT$rep) / 2
biDiff <- (biRT$sw + biRT$rep) / 2
#---------
# Bayes Factor Analysis
# what is the Bayes Factor of the difference in BI between stimRep & stimSw?
bfDiff <- ttestBF(x = biDiff, rscale = 0.707)
bfDiff
t.test(bfDiff)
t.test(biDiff)
hist(biDiff)
plot(density(biDiff))
setwd("~/Git/paperData/2015/Episodic Retrieval & Inhibition/Data & Analysis Code")
#------------------------------------------------------------------------------
### General set-up
# clear workspace
rm(list = ls())
# set working directory
setwd("~/Git/paperData/2015/Episodic Retrieval & Inhibition/Data & Analysis Code")
# load necessary functions file & load necessary packages
source("functions.R")
library(dplyr)
library(ggplot2)
library(ez)
library(BayesFactor)
library(BEST)
# load the data file
fullData <- read.csv("allData.csv", header = TRUE)
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### Error Data Trimming
# Remove null trials (1st and 2nd trial of each block)
# which trials were null?
nullTrials <- c(1, 2, 121, 122, 241, 242, 361, 362)
# remove these trials
data <- fullData[! fullData$trial %in% nullTrials, ]
# add column to code for removing two trials following an error, initialised
# to zero
data <- mutate(data, accTrim = 0)
# populate this column
for(i in 3:nrow(data)){
data$accTrim[i] <- data$accuracy[i - 2] * data$accuracy[i - 1]
}
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### Error Analysis
# First, we need to see the OVERALL accuracy per participant, as we will want
# to remove people who do not meet a certain criteria
accuracy <- data %>%
group_by(subject) %>%
summarise(meanAccuracy = (sum(accuracy) / length(accuracy) * 100))
# which subjects fall below our criterion of 90% accuracy?
errorRemove <- accuracy[accuracy$meanAccuracy <= 90, ]$subject
# remove these subjects from the data file
data <- data[! data$subject %in% errorRemove, ]
# remove the 2 trials following an error
data <- subset(data, data$accTrim == 1)
# now produce a data frame with accuracy analysis per condition
accuracy <- data %>%
group_by(subject, stimRep, sequence) %>%
summarise(acc = (sum(accuracy) / length(accuracy)))
# now remove all error trials, so we are ready for RT analysis
data <- subset(data, data$accuracy == 1)
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
### response time analysis
# trim the RTs with fixed standard deviation upper limit
rtData <- getRTs(data = data, minRT = 150, sd = 2.5)
#---------
# calculate the mean BI for each condition
biRT <- rtData %>%
group_by(subject) %>%
summarise(rep = abaRep - cbaRep, sw = abaSw - cbaSw)
# get the difference score
biDiff <- biRT$rep - biRT$sw
#---------
# Bayes Factor Analysis
# what is the Bayes Factor of the difference in BI between stimRep & stimSw?
bfDiff <- ttestBF(x = biDiff, rscale = 0.707)
# plot the progression of the Bayes Factor of the interaction as more
# subjects are added
bfProg <- plotBF(biDiff, scale = 0.707)
bfProg[, 2] <- log(bfProg[, 2])
bfProg[1, 2] <- 0
pdf("bayesFactor.pdf", width = 8, height = 5)
plot(bfProg[, 1], bfProg[, 2], type = "b", xlab = "Sample Size",
ylab = "(Log) Bayes Factor (10)", ylim = c(-2.5, 2.5), pch = 19,
col = "gray48", lwd = 2)
abline(h = 0, lwd = 1)
abline(h = log(6), col = "black", lty = 2, lwd = 2)
abline(h = log(1/6), col = "black", lty = 2, lwd = 2)
text(0, log(3) + 0.4, labels = "Evidence for Alternative",
cex = 1.5, col = "black", pos = 4)
text(0, log(1/3) - 0.4, labels = "Evidence for Null",
cex = 1.5, col = "black", pos = 4)
dev.off()
#---------
### ANOVA analsyis
# disable scientific notation
options(scipen = 999)
options(digits = 4)
#--- accuracy
accuracy <- data.frame(accuracy)
aovACC <- ezANOVA(
data = accuracy
, dv = .(acc)
, wid = .(subject)
, within = .(sequence, stimRep)
, between = NULL
, detailed = FALSE)
aovACC
sqrt(3.36)
mean(c(96.20, 96.36))
mean(c(95.02, 95.81))
sqrt(12.17)
biDiff <- biRT$rep
t.test(biDiff)
ttestBF(x = biDiff, rscale = 0.707)
